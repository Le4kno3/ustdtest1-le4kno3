import { providers, Wallet } from "ethers";
declare type AgentDescription = {
    created: boolean;
    owner: string;
    metadata: string;
};
export default class AgentRegistry {
    private ethersAgentRegistryProvider;
    private agentRegistryContractAddress;
    constructor(ethersAgentRegistryProvider: providers.JsonRpcProvider, agentRegistryContractAddress: string);
    getAgent(agentId: string): Promise<AgentDescription>;
    agentExists(agentId: string): Promise<boolean>;
    createAgent(fromWallet: Wallet, agentId: string, reference: string, chainIds: number[]): Promise<any>;
    updateAgent(fromWallet: Wallet, agentId: string, reference: string, chainIds: number[]): Promise<any>;
    isEnabled(agentId: string): Promise<any>;
    disableAgent(fromWallet: Wallet, agentId: string): Promise<any>;
    enableAgent(fromWallet: Wallet, agentId: string): Promise<any>;
    private getContract;
    private getTxOptions;
}
export {};
